{"version":3,"sources":["components/color-button/ColorButton.js","components/color-panel/ColorPanel.js","components/settings/Settings.js","components/indicators/LetterIndicator.js","components/indicators/DirectionIndicator.js","components/stitch/Stitch.js","components/master-stitch/MasterStitch.js","components/clickable-stitch/ClickableStitch.js","components/column/Column.js","components/column-container/ColumnContainer.js","components/pattern-container/PatternContainer.js","components/app/App.js","serviceWorker.js","index.js"],"names":["ColorButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","handleClose","handleChange","state","displayColorPicker","setState","color","index","react_default","a","createElement","Fragment","className","onClick","style","background","lib","onChange","React","Component","ColorPanel","_ref","colors","map","ColorButton_ColorButton","key","Settings","handleHeightChange","handleWidthChange","handleEdgeChange","handleColorChange","e","handleWidht","target","value","handleHeight","handleEdge","handleColor","width","height","nmbOfEdgeSts","color_panel_ColorPanel","colorPalette","LetterIndicator","letter","c","r","concat","DirectionIndicator","direction","directionChange","Stitch","status","againstMasterDir","isDouble","number","backgroundColor","MasterStitch","hex","components_stitch_Stitch","ClickableStitch","handleDoubleClick","prevent","timer","_this2","setTimeout","doClickAction","clearTimeout","doDoubleClickAction","onDoubleClick","Column","handleMasterStsDirectionChange","handleMasterStsColorChange","createDirectionIndicator","createMasterStitches","createNormalStitches","initiateNormalStsState","changeNormalStsState","changeOneStitchAfterOneClick","changeOneStitchAfterDoubleClick","getNextIndexAlongMastDir","getNextIndexAgainstMastDir","getStitchBelow","normalSts","masterStsIndeces","stitchColors","defaultMasterDirection","rowShift","parseInt","nmbMasterSts","ri","warpIndex","currentWarpIndex","sameMastDirAsStBelow","newWarpIndex","stitchIndex","shouldChangeMasterDir","currentStitch","stitchBelow","sameMastDirAsBelow","isNowDouble","howManyTurns","stitchIndexR","copy","toConsumableArray","newStitch","changeNormalStitchIndex","changeNormalStitchDirection","changeAllStsStateAfterMasterDirChange","colorHex","indicators_DirectionIndicator","masterSts","push","MasterStitch_MasterStitch","ci","showNormalSts","modelSts","curSt","ClickableStitch_ClickableStitch","shouldNormalStitchesBeShown","columnShift","showEdgeSts","ColumnContainer","numberOfMasterRows","rr","lts","letters","indicators_LetterIndicator","createLetters","columns","showNormalStitches","Column_Column","createColumns","PatternContainer","column_container_ColumnContainer","App","handleEdgeColumnChange","showEdgeColumns","numberOfEdgeColumns","num","Settings_Settings","PatternContainer_PatternContainer","Boolean","window","location","hostname","match","ReactDOM","render","components_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d4f04f2.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SketchPicker } from \"react-color\";\nimport \"./ColorButton.scss\";\n\nexport default class ColorButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      displayColorPicker: false\n    };\n  }\n\n  handleClick() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  }\n\n  handleClose() {\n    this.setState({ displayColorPicker: false });\n  }\n\n  handleChange(color) {\n    this.props.handleChange(color, this.props.index);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"swatch\" onClick={this.handleClick}>\n          <div\n            className=\"swatch-color\"\n            style={{\n              background: this.props.color\n            }}\n          />\n        </div>\n        {this.state.displayColorPicker ? (\n          <div className=\"swatch-popover\">\n            <div className=\"swatch-cover\" onClick={this.handleClose} />\n            <SketchPicker\n              color={this.props.color}\n              onChange={this.handleChange}\n            />\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nColorButton.propTypes = {\n  color: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport ColorButton from \"../color-button/ColorButton\";\n\nconst ColorPanel = ({colors, handleChange}) => {\n    let index = -1;\n    return <div className=\"color-panel-js\">\n        {colors.map((color) => {\n            index++;\n            return (<ColorButton color={color} index={index} key={index} handleChange={handleChange}></ColorButton>);\n            })\n        }\n         </div>;\n};\n\nexport default ColorPanel;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport ColorPanel from \"../color-panel/ColorPanel\";\nimport \"./Settings.scss\";\nexport default class Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleHeightChange = this.handleHeightChange.bind(this);\n    this.handleWidthChange = this.handleWidthChange.bind(this);\n    this.handleEdgeChange = this.handleEdgeChange.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n  }\n\n  handleWidthChange(e) {\n    this.props.handleWidht(e.target.value);\n  }\n\n  handleHeightChange(e) {\n    this.props.handleHeight(e.target.value);\n  }\n  handleEdgeChange(e) {\n    this.props.handleEdge(e.target.value);\n  }\n\n  handleColorChange(color, index) {\n    this.props.handleColor(color, index);\n  }\n\n  render() {\n    return (\n      <div className=\"grid-item-settings\">\n        <div className=\"settings-width\">\n          <label>\n            Mallikerran leveys:\n            <input value={this.props.width} onChange={this.handleWidthChange} />\n          </label>\n        </div>\n        <div className=\"settings-height\">\n          <label>\n            Mallikerran korkeus:\n            <input\n              value={this.props.height}\n              onChange={this.handleHeightChange}\n            />\n          </label>\n        </div>\n        <div className=\"settings-edges\">\n          <label>\n            Reunasilmukoiden määrä:\n            <input\n              value={this.props.nmbOfEdgeSts}\n              onChange={this.handleEdgeChange}\n            />\n          </label>\n        </div>\n        <div className=\"settings-colors\">\n          <label>Väripaletti:</label>\n          <ColorPanel colors={this.props.colorPalette} handleChange={this.handleColorChange}></ColorPanel>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    nmbOfEdgeSts: PropTypes.number.isRequired,\n    colorPalette: PropTypes.array.isRequired,\n    handleWidht: PropTypes.func.isRequired,\n    handleHeight: PropTypes.func.isRequired,\n    handleEdge: PropTypes.func.isRequired,\n    handleColor: PropTypes.func.isRequired,\n}\n","import React from 'react';\n\nconst LetterIndicator = ({letter, c, r}) => {\n    return <div className={`grid-item-${c}-${r} grid-item__centered letter-indicator-js`}>\n        {letter}\n    </div>\n}\n\nexport default LetterIndicator;\n","import React from 'react';\n\nconst DirectionIndicator = ({c, r, direction, directionChange}) => {\n    return <div className={`grid-item__centered grid-item-${c}-${r} direction-indicator-js`} onClick={directionChange}>\n        <div className=\"direction-js\">{direction === 'forward' ? '/' : '\\\\'}</div>\n    </div>;\n\n}\n\nexport default DirectionIndicator;\n","import React from 'react';\nimport './Stitch.scss';\n\nconst Stitch = ({color, status, againstMasterDir, isDouble, number}) => {\n        return <div className={`stitch stitch__${againstMasterDir ? 'against': 'along'}`}>\n            {isDouble &&\n                <div className={`oval oval__${status}`}>\n                    <div className={`double-oval double-oval__${status}`} style={{backgroundColor: color}}>\n                    </div>\n                </div>\n            }\n\n            {!isDouble &&\n            <div className={`oval oval__${status}`} style={{backgroundColor: color}}>\n\n            </div>\n            }\n        </div>;\n};\n\nexport default Stitch;\n","import React from \"react\";\nimport Stitch from \"../stitch/Stitch\";\nimport PropTypes from \"prop-types\";\nimport { GithubPicker } from \"react-color\";\n\nexport default class MasterStitch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      displayColorPicker: false\n    };\n  }\n\n  // Color change\n  handleChange(color) {\n      this.props.handleColorChange(this.props.index, color.hex);\n  }\n\n  handleClick() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  }\n\n  render() {\n    return (\n      <div\n        className={`grid-item grid-item-${this.props.c}-${this.props.r}`}\n        onClick={this.handleClick}\n      >\n        <Stitch\n          color={this.props.color}\n          status={this.props.status}\n          againstMasterDir={false}\n        />\n        {this.state.displayColorPicker ? (\n          <div className=\"swatch-popover\">\n            <div className=\"swatch-cover\" onClick={this.handleClose} />\n            <GithubPicker\n              colors={this.props.colorPalette}\n              onChange={this.handleChange}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nMasterStitch.propTypes = {\n  index: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  c: PropTypes.number.isRequired,\n  r: PropTypes.number.isRequired,\n  status: PropTypes.string.isRequired,\n  handleColorChange: PropTypes.func.isRequired,\n  colorPalette: PropTypes.array.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Stitch from '../stitch/Stitch';\nimport './ClickableStitch.scss';\n\nexport default class ClickableStitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleDoubleClick = this.handleDoubleClick.bind(this);\n        this.state = {\n            prevent: false,\n            timer: 0,\n        }\n    }\n\n    handleClick() {\n        this.setState({\n            timer: setTimeout(() => {\n                if (!this.state.prevent) {\n                  this.doClickAction();\n                }\n                this.setState({prevent: false});\n              }, 200)\n        });\n\n    }\n\n    handleDoubleClick() {\n      clearTimeout(this.state.timer);\n      this.setState({prevent: true});\n      this.doDoubleClickAction();\n    }\n\n    doClickAction() {\n        this.props.handleClick(this.props.r);\n    }\n\n    doDoubleClickAction() {\n      this.props.handleDoubleClick(this.props.r);\n    }\n\n    render() {\n        return <div className={`grid-item grid-item-${this.props.c}-${this.props.r}`}\n        onClick={this.handleClick} onDoubleClick={this.handleDoubleClick}>\n            <Stitch\n            color={this.props.color}\n            status={this.props.direction}\n            againstMasterDir={this.props.againstMasterDir}\n            isDouble={this.props.isDouble}\n            number={this.props.number}\n            ></Stitch>\n        </div>\n    }\n}\n\nClickableStitch.propTypes = {\n    c: PropTypes.number.isRequired,\n    r: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n    againstMasterDir: PropTypes.bool.isRequired,\n    handleClick: PropTypes.func.isRequired,\n    handleDoubleClick: PropTypes.func.isRequired,\n    isDouble: PropTypes.bool.isRequired,\n    number: PropTypes.number,\n}\n","import React from 'react';\nimport DirectionIndicator from '../indicators/DirectionIndicator';\nimport MasterStitch from '../master-stitch/MasterStitch';\nimport ClickableStitch from '../clickable-stitch/ClickableStitch';\nimport PropTypes from 'prop-types';\n\nexport default class Column extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleMasterStsDirectionChange = this.handleMasterStsDirectionChange.bind(this);\n        this.handleMasterStsColorChange = this.handleMasterStsColorChange.bind(this);\n        this.createDirectionIndicator = this.createDirectionIndicator.bind(this);\n\n        this.createMasterStitches = this.createMasterStitches.bind(this);\n        this.createNormalStitches = this.createNormalStitches.bind(this);\n\n        this.initiateNormalStsState = this.initiateNormalStsState.bind(this);\n        this.changeNormalStsState = this.changeNormalStsState.bind(this);\n        this.changeOneStitchAfterOneClick = this.changeOneStitchAfterOneClick.bind(this);\n        this.changeOneStitchAfterDoubleClick = this.changeOneStitchAfterDoubleClick.bind(this);\n\n        this.getNextIndexAlongMastDir = this.getNextIndexAlongMastDir.bind(this);\n        this.getNextIndexAgainstMastDir = this.getNextIndexAgainstMastDir.bind(this);\n\n        this.getStitchBelow = this.getStitchBelow.bind(this);\n\n        const defaultMasterDirection = 'forward';\n\n        const normalSts = this.initiateNormalStsState(defaultMasterDirection);\n\n        this.state = {\n            masterStsIndeces: [0, 1, 2, 3],\n            direction: defaultMasterDirection,\n            stitchColors: ['#FFFFFF', '#8A2BE2', '#8A2BE2', '#FFFFFF'],\n            normalSts: normalSts,\n        }\n    }\n\n    initiateNormalStsState(defaultMasterDirection) {\n        const rowShift = this.props.rowShift;\n        const r = parseInt(this.props.r) - this.props.nmbMasterSts;\n        const nmbMasterSts = this.props.nmbMasterSts;\n\n        const normalSts = [];\n        for (let ri = r; ri > rowShift; ri--){\n            const index = ((r- ri) % nmbMasterSts);\n            normalSts[ri] = {\n                warpIndex: index,\n                direction: defaultMasterDirection,\n                againstMasterDir: false,\n                isDouble: false,\n            };\n        }\n\n        return normalSts;\n    }\n\n    changeWarpIndexToDouble(currentWarpIndex) {\n        const nmbMasterSts = this.props.nmbMasterSts;\n        return (currentWarpIndex < nmbMasterSts / 2) ? (currentWarpIndex + 2) : (currentWarpIndex - 2);\n    }\n\n    getNextIndexAlongMastDir(currentWarpIndex, sameMastDirAsStBelow) {\n        let newWarpIndex = (currentWarpIndex === this.props.nmbMasterSts - 1) ? 0 : (currentWarpIndex + 1);\n        return sameMastDirAsStBelow ? newWarpIndex : this.getNextIndexAgainstMastDir(newWarpIndex, true);\n    }\n\n    getNextIndexAgainstMastDir(currentWarpIndex, sameMastDirAsStBelow) {\n        let newWarpIndex = (currentWarpIndex === 0) ? (this.props.nmbMasterSts - 1) : (currentWarpIndex - 1);\n        return sameMastDirAsStBelow ? newWarpIndex : this.getNextIndexAlongMastDir(newWarpIndex, true);\n    }\n\n    getStitchBelow(stitchIndex) {\n        let stitchBelow;\n        // If the current stitch is the lowest of the pattern repeat, the stitch below is latest master stitch\n        if (stitchIndex === (this.props.r - this.props.nmbMasterSts)) {\n            stitchBelow = {againstMasterDir: false, direction: this.state.direction, warpIndex: this.state.masterStsIndeces[3]};\n        }\n        else {\n            stitchBelow = this.state.normalSts[(stitchIndex + 1)];\n        }\n        return stitchBelow;\n    }\n\n    changeNormalStitchDirection(stitchIndex, shouldChangeMasterDir) {\n        let currentStitch = this.state.normalSts[stitchIndex];\n        let stitchBelow = this.getStitchBelow(stitchIndex);\n\n        currentStitch.direction = currentStitch.direction === 'forward' ? 'backward' : 'forward';\n        // Usually always shouldChangeMasterDir\n        // Not true if we are changing the master direction of the whole column\n        if (shouldChangeMasterDir) {\n            currentStitch.againstMasterDir = currentStitch.againstMasterDir ? false : true;\n        }\n\n        // Done to all stitches when turning once\n            const sameMastDirAsBelow = currentStitch.againstMasterDir === stitchBelow.againstMasterDir;\n            const newWarpIndex = currentStitch.againstMasterDir ?\n                this.getNextIndexAgainstMastDir(stitchBelow.warpIndex, sameMastDirAsBelow) : this.getNextIndexAlongMastDir(stitchBelow.warpIndex, sameMastDirAsBelow);\n            currentStitch.warpIndex = newWarpIndex;\n\n        // Double\n        if (currentStitch.isDouble) {\n            const sameMastDirAsBelow = currentStitch.againstMasterDir === stitchBelow.againstMasterDir;\n            const newWarpIndex = currentStitch.againstMasterDir ?\n                this.getNextIndexAgainstMastDir(stitchBelow.warpIndex, !sameMastDirAsBelow) : this.getNextIndexAlongMastDir(stitchBelow.warpIndex, !sameMastDirAsBelow);\n            currentStitch.warpIndex = newWarpIndex;\n        }\n\n        return currentStitch;\n    }\n\n    changeNormalStitchIndex(stitchIndex, isNowDouble) {\n        let currentStitch = this.state.normalSts[stitchIndex];\n        let againstMasterDir = currentStitch.againstMasterDir;\n        let newWarpIndex;\n        if ((isNowDouble && againstMasterDir) || (!isNowDouble && !againstMasterDir)) {\n            newWarpIndex = this.getNextIndexAgainstMastDir(currentStitch.warpIndex, true);\n        }\n        else {\n            newWarpIndex = this.getNextIndexAlongMastDir(currentStitch.warpIndex, true);\n        }\n        currentStitch.warpIndex = newWarpIndex;\n        return currentStitch;\n    }\n\n\n    changeNormalStsState(howManyTurns, stitchIndexR, shouldChangeMasterDir) {\n        const rowShift = this.props.rowShift;\n        let copy = [...this.state.normalSts];\n\n        // Changing doubleness\n        if (howManyTurns === 2) {\n            let currentStitch = copy[stitchIndexR];\n            // Changing doubleness\n            currentStitch.isDouble = currentStitch.isDouble ? false : true;\n            // Changing index\n            currentStitch = this.changeNormalStitchIndex(stitchIndexR, currentStitch.isDouble);\n\n            // Changes also other stitches' indeces, changing those\n            let newStitch;\n            // Starting from above current stitch\n            for (let ri = stitchIndexR - 1; ri > rowShift; ri--) {\n                newStitch = this.changeNormalStitchIndex(ri, currentStitch.isDouble);\n                copy[ri] = newStitch;\n            }\n        }\n\n        // Just change forward to backward and other way round, affects all stitches above the current stitch\n        if (howManyTurns === 1) {\n            let newStitch;\n            for (let ri = stitchIndexR; ri > rowShift; ri--) {\n                newStitch = this.changeNormalStitchDirection(ri, shouldChangeMasterDir);\n                copy[ri] = newStitch;\n            }\n        }\n        this.setState({normalSts: copy});\n\n    }\n\n    changeAllStsStateAfterMasterDirChange() {\n        const r = parseInt(this.props.r) - this.props.nmbMasterSts;\n        this.changeNormalStsState(1, r, false);\n    }\n\n    changeOneStitchAfterOneClick(index) {\n        this.changeNormalStsState(1, index, true);\n    }\n\n    changeOneStitchAfterDoubleClick(index) {\n        this.changeNormalStsState(2, index, false);\n    }\n\n    handleMasterStsDirectionChange() {\n        this.setState({direction: this.state.direction === 'forward' ? 'backward': 'forward'}, this.changeAllStsStateAfterMasterDirChange);\n    }\n\n    handleMasterStsColorChange(index, colorHex) {\n        const copy = [...this.state.stitchColors];\n        copy[index] = colorHex;\n        this.setState({stitchColors: copy});\n    }\n\n    createDirectionIndicator() {\n        return <DirectionIndicator c={this.props.c} r={this.props.r +1}\n        direction={this.state.direction} directionChange={this.handleMasterStsDirectionChange}></DirectionIndicator>\n    }\n\n    createMasterStitches() {\n        const r = this.props.r;\n        const c = this.props.c;\n        const nmbMasterSts = this.props.nmbMasterSts;\n        const masterSts = [];\n\n        for (let ri = r; ri > r - nmbMasterSts; ri--) {\n            let index = r - ri;\n            masterSts.push(<MasterStitch\n                index={index} color={this.state.stitchColors[index]}\n                handleColorChange={this.handleMasterStsColorChange}\n                key={'' + c + '0' + ri} status={this.state.direction}\n                c={c} r={ri}\n                colorPalette={this.props.colorPalette}></MasterStitch>);\n        }\n        return masterSts;\n    }\n\n    createNormalStitches() {\n        const rowShift = this.props.rowShift;\n        const r = parseInt(this.props.r) - this.props.nmbMasterSts;\n        const ci = parseInt(this.props.c);\n\n        const showNormalSts = this.props.showNormalSts;\n        const modelSts = [];\n\n        for (let ri = r; ri > rowShift; ri--){\n            const curSt = this.state.normalSts[ri];\n            const color = this.state.stitchColors[curSt.warpIndex];\n\n            if (showNormalSts) {\n                modelSts.push(<ClickableStitch\n                    color={color}\n                    key={'' + ci + '0' + ri}\n                    c={ci} r={ri}\n                    direction={curSt.direction}\n                    againstMasterDir={curSt.againstMasterDir}\n                    handleClick={this.changeOneStitchAfterOneClick}\n                    handleDoubleClick={this.changeOneStitchAfterDoubleClick}\n                    isDouble={curSt.isDouble}\n                    number={curSt.warpIndex}\n                ></ClickableStitch>);\n            }\n        }\n\n        return modelSts;\n    }\n\n    render() {\n        return <React.Fragment>\n        {this.createDirectionIndicator()}\n        {this.createMasterStitches()}\n        {this.createNormalStitches()}\n        </React.Fragment>\n    }\n\n}\n\nColumn.propTypes = {\n    c: PropTypes.number.isRequired,\n    r: PropTypes.number.isRequired,\n    nmbMasterSts: PropTypes.number.isRequired,\n    rowShift: PropTypes.number.isRequired,\n    showNormalSts: PropTypes.bool.isRequired,\n    colorPalette: PropTypes.array.isRequired,\n}\n","import React from 'react';\nimport LetterIndicator from '../indicators/LetterIndicator';\nimport Column from '../column/Column';\n\nconst createLetters = (rr, numberOfMasterRows, columnShift, rowShift) => {\n    const r = parseInt(rr) + rowShift;\n    const ci = columnShift - 1;\n    const lts = ['A', 'B', 'C', 'D'];\n    const letters = [];\n    // Letters for master sts\n    for (let ri = r + numberOfMasterRows; ri > r; ri--) {\n        const index = (r+numberOfMasterRows-ri);\n        letters.push(<LetterIndicator key={ri} letter={lts[index]} c={ci} r={ri}></LetterIndicator>);\n    }\n    return letters;\n};\n\nconst shouldNormalStitchesBeShown = (c, ci, columnShift, nmbOfEdgeSts, showEdgeSts) => {\n    if(ci < (nmbOfEdgeSts + columnShift) || ci > (c - nmbOfEdgeSts + columnShift - 1))  {\n        if (showEdgeSts) {\n            return true;\n        }\n        return false;\n    }\n    return true;\n};\n\nconst createColumns = (c, r, columnShift, rowShift, numberOfMasterRows, nmbOfEdgeSts, showEdgeSts, colorPalette) => {\n    // RI is the lowes row of the whole pattern\n    const ri = parseInt(r) + rowShift + numberOfMasterRows;\n    const columns = [];\n    for (let ci = columnShift; ci < c + columnShift; ci++) {\n        const showNormalStitches = shouldNormalStitchesBeShown(c, ci, columnShift, nmbOfEdgeSts, showEdgeSts);\n        columns.push(<Column\n            key={'' + ci + '0' + ri}\n            c={ci} r={ri}\n            nmbMasterSts={numberOfMasterRows}\n            rowShift = {rowShift}\n            nmbOfEdgeSts={nmbOfEdgeSts}\n            showNormalSts={showNormalStitches}\n            colorPalette={colorPalette}\n            ></Column>);\n    }\n    return columns;\n}\n\nconst ColumnContainer = ({c, r, columnShift, rowShift, numberOfMasterRows, nmbOfEdgeSts, showEdgeSts, colorPalette}) => {\n    return <React.Fragment>\n        {createLetters(r, numberOfMasterRows, columnShift, rowShift)}\n        {createColumns(c, r, columnShift, rowShift, numberOfMasterRows, nmbOfEdgeSts, showEdgeSts, colorPalette)}\n    </React.Fragment>;\n}\n\nexport default ColumnContainer;\n","import React from 'react';\nimport ColumnContainer from '../column-container/ColumnContainer';\nimport PropTypes from 'prop-types';\n\nexport default class PatternContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columnShift: 3,\n            rowShift: 4,\n            numberOfMasterRows: 4,\n        }\n    }\n\n    render() {\n        return (\n            <ColumnContainer\n                c={this.props.c} r={this.props.r}\n                columnShift={this.state.columnShift} rowShift={this.state.rowShift}\n                numberOfMasterRows={this.state.numberOfMasterRows}\n                nmbOfEdgeSts={this.props.nmbOfEdgeSts}\n                showEdgeSts={this.props.showEdgeSts}\n                colorPalette={this.props.colorPalette}\n                ></ColumnContainer>\n        );\n    }\n\n}\n\nPatternContainer.propTypes = {\n    c: PropTypes.number.isRequired,\n    r: PropTypes.number.isRequired,\n    showEdgeSts: PropTypes.bool.isRequired,\n    nmbOfEdgeSts: PropTypes.number.isRequired,\n    colorPalette: PropTypes.array.isRequired,\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport Settings from \"../settings/Settings\";\nimport PatternContainer from \"../pattern-container/PatternContainer\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleHeight = this.handleHeight.bind(this);\n    this.handleWidht = this.handleWidht.bind(this);\n    this.handleEdgeColumnChange = this.handleEdgeColumnChange.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n    this.state = {\n      width: 12,\n      height: 10,\n      showEdgeColumns: false,\n      numberOfEdgeColumns: 3,\n      colorPalette: [\n        '#D0021B',\n        '#F5A623',\n        '#F8E71C',\n        '#8B572A',\n        '#7ED321',\n        '#417505',\n        '#BD10E0',\n        '#9013FE',\n        '#4A90E2',\n        '#50E3C2',\n        '#B8E986',\n        '#000000',\n        '#4A4A4A',\n        '#9B9B9B',\n        '#FFFFFF',\n      ]\n    };\n  }\n\n  handleHeight(num) {\n    this.setState({ height: parseInt(num) });\n  }\n\n  handleWidht(num) {\n    this.setState({ width: parseInt(num) });\n  }\n\n  handleShowEdgeChange() {\n    this.setState({ showEdgeColumns: !this.state.showEdgeColumns });\n  }\n\n  handleEdgeColumnChange(num) {\n    this.setState({ numberOfEdgeColumns: parseInt(num) });\n  }\n\n  handleColorChange(color, index) {\n    const copy = [...this.state.colorPalette];\n    copy[index] = color.hex;\n    this.setState({ colorPalette: copy });\n  }\n\n  render() {\n    const width = this.state.width;\n    const height = this.state.height;\n    const numberOfEdgeColumns = this.state.numberOfEdgeColumns;\n    return (\n      <div className=\"grid-wrapper grid-wrapper__border\">\n        <div className=\"grid-item-debug\" />\n        <Settings\n          height={height}\n          width={width}\n          nmbOfEdgeSts={numberOfEdgeColumns}\n          handleWidht={this.handleWidht}\n          handleHeight={this.handleHeight}\n          handleEdge={this.handleEdgeColumnChange}\n          handleColor={this.handleColorChange}\n          colorPalette={this.state.colorPalette}\n        />\n\n        <PatternContainer\n          c={width}\n          r={height}\n          showEdgeSts={this.state.showEdgeColumns}\n          nmbOfEdgeSts={numberOfEdgeColumns}\n          colorPalette={this.state.colorPalette}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}